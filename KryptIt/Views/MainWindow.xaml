<Window x:Class="KryptIt.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:vm="clr-namespace:KryptIt.ViewModels"
        xmlns:conv="clr-namespace:KryptIt.Converter"
        xmlns:views="clr-namespace:KryptIt.Views"
        Title="KryptIt" Width="1000" Height="600"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Thème MaterialDesign compatible -->
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!-- Converters -->
            <conv:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Grid>
        <!-- Structure principale -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- HEADER -->
            <Border Grid.Row="0" Background="{DynamicResource PrimaryHueMidBrush}" Padding="10, 15" BorderBrush="#E0E0E0" BorderThickness="0,0,0,1">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="Lock" Width="24" Height="24" Margin="0,0,5,0" VerticalAlignment="Center"/>
                        <TextBlock Text="KryptIt" VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Foreground="Black" Margin="0,0,10,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Command="{Binding OpenPopupCommand}" 
                                Style="{StaticResource MaterialDesignRaisedButton}" Margin="0,0,10,0">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Plus" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Ajouter" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}">
                            <materialDesign:PackIcon Kind="Account" Width="24" Height="24"/>
                        </Button>
                    </StackPanel>
                </DockPanel>
            </Border>

            <!-- CONTENU PRINCIPAL -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="240"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Sidebar -->
                <Border Grid.Column="0" Background="White" BorderBrush="#E0E0E0" BorderThickness="0,0,1,0">
                    <DockPanel LastChildFill="True" Margin="10">
                        <!-- Bouton Settings fixé en bas de la sidebar -->
                        <Button Command="{Binding OpenSettingsCommand}" 
                                Style="{StaticResource MaterialDesignFlatButton}" 
                                DockPanel.Dock="Bottom" Margin="0,20,0,0">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" Margin="0,0,5,0"/>
                                <TextBlock Text="Settings"/>
                            </StackPanel>
                        </Button>
                        <!-- Contenu principal de la sidebar -->
                        <StackPanel>
                            <TextBlock Text="Tags" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"/>
                            <ListBox ItemsSource="{Binding AvailableTags}" 
                                     SelectedItem="{Binding SelectedFilterTag}" 
                                     Style="{StaticResource MaterialDesignListBox}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TagName}" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </DockPanel>
                </Border>

                <!-- Main Content -->
                <StackPanel Grid.Column="1" Margin="20">
                    <!-- Zone de recherche -->
                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                             materialDesign:HintAssist.Hint="Search"
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,0,0,10"/>
                    <!-- Tableau des mots de passe -->
                    <Border Background="White" CornerRadius="4" Padding="10">
                        <ListView ItemsSource="{Binding FilteredPasswords}" 
                                  SelectedItem="{Binding SelectedPassword}"
                                  Style="{StaticResource MaterialDesignListView}">
                            <ListView.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Open in new Tab" Command="{Binding DataContext.OpenInNewTabCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <Separator/>
                                    <MenuItem Header="Copy Username" Command="{Binding DataContext.CopyUsernameCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <MenuItem Header="Copy Password" Command="{Binding DataContext.CopyPasswordCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <MenuItem Header="Copy Website" Command="{Binding DataContext.CopyWebsiteCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <Separator/>
                                    <MenuItem Header="Auto-Fill" Command="{Binding DataContext.AutoFillCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <Separator/>
                                    <MenuItem Header="Modify tags" Command="{Binding DataContext.OpenTagPopupCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                    <Separator/>
                                    <MenuItem Header="Delete" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=ListView}}" />
                                </ContextMenu>
                                <ContextMenu x:Key="EmptyAreaContextMenu">
                                    <MenuItem Header="Add an entry" Command="{Binding OpenPopupCommand}" />
                                </ContextMenu>
                            </ListView.Resources>
                            <!-- Appliquer le menu contextuel aux éléments du ListView -->
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                </Style>
                            </ListView.ItemContainerStyle>

                            <!-- Menu contextuel pour la zone vide -->
                            <ListView.ContextMenu>
                                <StaticResource ResourceKey="EmptyAreaContextMenu"/>
                            </ListView.ContextMenu>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="URL" Width="180" DisplayMemberBinding="{Binding SiteName}" />
                                    <GridViewColumn Header="Compte" Width="150" DisplayMemberBinding="{Binding Login}" />
                                    <GridViewColumn Header="Mot de passe" Width="220" DisplayMemberBinding="{Binding EncryptedPassword}" />
                                    <GridViewColumn Header="Tags" Width="200" DisplayMemberBinding="{Binding TagNames}" />
                                    <GridViewColumn Header="Date" Width="140" DisplayMemberBinding="{Binding CreatedAt}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Border>
                </StackPanel>
            </Grid>
        </Grid>

        <!-- POP-UP pour ajouter un compte (overlay) -->
        <Popup IsOpen="{Binding IsPopupOpen}" 
               Placement="Center" 
               AllowsTransparency="True" 
               PopupAnimation="Fade" 
               StaysOpen="False"
               HorizontalAlignment="Center"
               VerticalAlignment="Center">
            <Border Background="White" CornerRadius="5" Padding="30" BorderBrush="#E0E0E0" BorderThickness="1">
                <StackPanel>
                    <TextBlock Text="Ajouter un nouveau compte" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"/>
                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                             materialDesign:HintAssist.Hint="Nom du compte"
                             Text="{Binding NewAccount}" Margin="0,10,0,10"/>
                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                             materialDesign:HintAssist.Hint="Mot de passe"
                             Text="{Binding NewPassword}" Margin="0,10,0,10"/>
                    <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}" 
                             materialDesign:HintAssist.Hint="URL du site"
                             Text="{Binding NewURL}" Margin="0,10,0,10"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                        <Button Content="Annuler" Command="{Binding ClosePopupCommand}" 
                                Style="{StaticResource MaterialDesignFlatButton}" Margin="0,0,10,0"/>
                        <Button Content="Ajouter" Command="{Binding AddPasswordCommand}" 
                                Style="{StaticResource MaterialDesignRaisedButton}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>
        
        <!-- POP-UP pour ajouter un tag -->
        <Popup IsOpen="{Binding IsTagPopupOpen}" 
           Placement="Center" 
           AllowsTransparency="True" 
           PopupAnimation="Fade" 
           StaysOpen="False"
           HorizontalAlignment="Center"
           VerticalAlignment="Center">
            <Border Background="White" CornerRadius="5" Padding="30" BorderBrush="#E0E0E0" BorderThickness="1">
                <StackPanel>
                    <TextBlock Text="Gérer les Tags" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"/>

                    <!-- Ajouter un tag -->
                    <ComboBox ItemsSource="{Binding AvailableTags}" 
                      SelectedItem="{Binding SelectedTag}" 
                      DisplayMemberPath="TagName" 
                      Style="{StaticResource MaterialDesignComboBox}" 
                      Margin="0,0,0,10"/>
                    <Button Content="Ajouter Tag" 
                    Command="{Binding AddTagCommand}" 
                    Style="{StaticResource MaterialDesignRaisedButton}" 
                    Margin="0,0,0,10"/>

                    <!-- Liste des tags associés -->
                    <TextBlock Text="Tags associés" FontSize="14" FontWeight="Bold" Margin="0,10,0,5"/>
                    <ListBox ItemsSource="{Binding SelectedPassword.PasswordEntryTag}" 
                     Style="{StaticResource MaterialDesignListBox}" 
                     Margin="0,0,0,10">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Tag.TagName}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                    <Button Content="Supprimer" 
                                    Command="{Binding DataContext.RemoveTagCommand, RelativeSource={RelativeSource AncestorType=Popup}}" 
                                    CommandParameter="{Binding}" 
                                    Style="{StaticResource MaterialDesignFlatButton}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                        <Button Content="Fermer" Command="{Binding CloseTagPopupCommand}" 
                        Style="{StaticResource MaterialDesignFlatButton}" Margin="0,0,10,0"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>


        <!-- Overlay Settings -->
        <Grid x:Name="SettingsContent"
              Visibility="{Binding IsSettingsWindowVisible, Converter={StaticResource BoolToVisibilityConverter}}"
              HorizontalAlignment="Stretch" 
              VerticalAlignment="Stretch"
              Panel.ZIndex="1">
            <views:SettingsWindow DataContext="{Binding}"/>
        </Grid>
    </Grid>
</Window>
